[group_filter(1)]
description = A macro command that replaces a group title with its filter information. It is internally used by SAI in alert creation.
args = group_id
definition = | inputlookup em_groups where _key=$group_id$ \
| table filter \
| makemv delim="," filter \
| mvexpand filter \
| rex field=filter "(?<dim>.*)=(?<val>.*)" \
| table dim, val \
| stats values(val) by dim \
| transpose 0 header_field=dim \
| fields - column
iseval = 0

[sai_metrics_indexes]
description = A macro command to specify the index(es) to use for metrics searches in SAI.
definition = index = em_metrics OR index = vmware-perf-metrics

[sai_events_indexes]
description = Selects only non-internal indexes.
definition = index!=_* AND index!=infra_alerts

[sai_metadata_indexes]
description = A macro command to specify the index(es) to use for Kubernetes metadata searches in SAI.
definition = index=em_meta

[transform_sai_groups(1)]
description = A macro command to transform filters of SAI group(s) to field-value pairs with the matching group title.
args = group_title
definition = inputlookup em_groups where title="$group_title$" \
| makemv delim="," filter \
| mvexpand filter \
| rex field=filter "(?<dim>.*)=(?<val>.*)" \
| stats values(val) as vals by title, dim \
| eval {dim}=vals \
| fields - dim, vals, filter \
| stats values(*) as * by title
iseval = 0

[transform_all_sai_groups]
description = A macro command to transform filters of all SAI groups to field-value pairs with the matching group title.
definition = `transform_sai_groups(*)`
iseval = 0

# https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
[convert_k8s_resource_to_megabytes(1)]
description = A macro command to convert k8s resource values (contained in k8s metadata) to a consistent megabytes
args = field_name
definition = eval $field_name$=case( \
  like($field_name$, "%Ei"), \
    tonumber(replace($field_name$, "Ei", "")) * pow(1024, 6) / pow(1000, 2),  \
  like($field_name$, "%Pi"), \
    tonumber(replace($field_name$, "Pi", "")) * pow(1024, 5) / pow(1000, 2),  \
  like($field_name$, "%Ti"), \
    tonumber(replace($field_name$, "Ti", "")) * pow(1024, 4) / pow(1000, 2),  \
  like($field_name$, "%Gi"), \
    tonumber(replace($field_name$, "Gi", "")) * pow(1024, 3) / pow(1000, 2),  \
  like($field_name$, "%Mi"), \
    tonumber(replace($field_name$, "Mi", "")) * pow(1024, 2) / pow(1000, 2), \
  like($field_name$, "%Ki"), \
    tonumber(replace($field_name$, "Ki", "")) * 1024 / 1000, \
  like($field_name$, "%E"), \
    tonumber(replace($field_name$, "E", "")) * pow(1000, 4),  \
  like($field_name$, "%P"), \
    tonumber(replace($field_name$, "P", "")) * pow(1000, 3),  \
  like($field_name$, "%T"), \
    tonumber(replace($field_name$, "T", "")) * pow(1000, 2),  \
  like($field_name$, "%G"), \
    tonumber(replace($field_name$, "G", "")) * pow(1000, 1),  \
  like($field_name$, "%M"), \
    tonumber(replace($field_name$, "M", "")), \
  like($field_name$, "%K"), \
    tonumber(replace($field_name$, "K", "")) / 1000 \
)
iseval = 0