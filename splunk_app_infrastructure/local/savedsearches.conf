[Entity Class - aws_cloudwatch_ebs]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:aws_cloudwatch_ebs
alert_condition = search key=*
cron_schedule = */3 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("VolumeId") as "dimension.identifier.VolumeId" [ mcatalog values(_dims) as info where metric_name=AWS/EBS* AND (`sai_metrics_indexes`) earliest=-1200s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "unit" AND info != "host" AND info != "MetricName" AND info != "Period" AND info != "VolumeId"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=AWS/EBS* AND (`sai_metrics_indexes`) earliest=-1200s by "VolumeId"| fields dimension.*| eval entity_class="aws_cloudwatch_ebs", mod_time=now(), expiry_time=mod_time+1200| eval identifier_dimensions="VolumeId"| makemv delim="$d3c4482fbbcf4ce78aa2ba6646af7311$" identifier_dimensions| eval key=sha256('dimension.identifier.VolumeId' + ":" + entity_class), title='dimension.identifier.VolumeId'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - aws_cloudwatch_ec2]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:aws_cloudwatch_ec2
alert_condition = search key=*
cron_schedule = */3 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("InstanceId") as "dimension.identifier.InstanceId" [ mcatalog values(_dims) as info where metric_name=AWS/EC2* AND (`sai_metrics_indexes`) earliest=-1200s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "unit" AND info != "host" AND info != "MetricName" AND info != "Period" AND info != "InstanceId"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=AWS/EC2* AND (`sai_metrics_indexes`) earliest=-1200s by "InstanceId"| fields dimension.*| eval entity_class="aws_cloudwatch_ec2", mod_time=now(), expiry_time=mod_time+1200| eval identifier_dimensions="InstanceId"| makemv delim="$267d7d0351764e8d9e538bf8d2f3b80a$" identifier_dimensions| eval key=sha256('dimension.identifier.InstanceId' + ":" + entity_class), title='dimension.identifier.InstanceId'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - aws_cloudwatch_elb]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:aws_cloudwatch_elb
alert_condition = search key=*
cron_schedule = */3 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("LoadBalancerName") as "dimension.identifier.LoadBalancerName" [ mcatalog values(_dims) as info where metric_name=AWS/ELB* AND (`sai_metrics_indexes`) earliest=-1200s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "unit" AND info != "host" AND info != "MetricName" AND info != "Period" AND info != "LoadBalancerName"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=AWS/ELB* AND (`sai_metrics_indexes`) earliest=-1200s by "LoadBalancerName"| fields dimension.*| eval entity_class="aws_cloudwatch_elb", mod_time=now(), expiry_time=mod_time+1200| eval identifier_dimensions="LoadBalancerName"| makemv delim="$7a07a64a8d3c4fda9b043e808c5eccb8$" identifier_dimensions| eval key=sha256('dimension.identifier.LoadBalancerName' + ":" + entity_class), title='dimension.identifier.LoadBalancerName'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - k8s_node]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:k8s_node
alert_condition = search key=*
cron_schedule = */3 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("node") as "dimension.identifier.node" [ mcatalog values(_dims) as info where metric_name=kube.node.* AND (`sai_metrics_indexes`) earliest=-600s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "unit" AND info != "host" AND info != "extracted_source" AND info != "device" AND info != "interface" AND info != "type" AND info != "node"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=kube.node.* AND (`sai_metrics_indexes`) earliest=-600s by "node"| fields dimension.*| eval entity_class="k8s_node", mod_time=now(), expiry_time=mod_time+600| eval identifier_dimensions="node"| makemv delim="$82bf49f3b345439aae1448f42a1f39c3$" identifier_dimensions| eval key=sha256('dimension.identifier.node' + ":" + entity_class), title='dimension.identifier.node'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - k8s_pod]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:k8s_pod
alert_condition = search key=*
cron_schedule = */3 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("pod-name") as "dimension.identifier.pod-name" values("pod-namespace") as "dimension.identifier.pod-namespace" [ mcatalog values(_dims) as info where metric_name=kube.pod.* AND (`sai_metrics_indexes`) earliest=-600s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "unit" AND info != "host" AND info != "extracted_source" AND info != "pod-name" AND info != "pod-namespace"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=kube.pod.* AND (`sai_metrics_indexes`) earliest=-600s by "pod-name","pod-namespace"| fields dimension.*| eval entity_class="k8s_pod", mod_time=now(), expiry_time=mod_time+600| eval identifier_dimensions="pod-name$8910352f8ba84fc58fc72079c3079600$pod-namespace"| makemv delim="$8910352f8ba84fc58fc72079c3079600$" identifier_dimensions| eval key=sha256('dimension.identifier.pod-name' + ":" + 'dimension.identifier.pod-namespace' + ":" + entity_class), title='dimension.identifier.pod-name'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - os]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:os
alert_condition = search key=*
cron_schedule = */1 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("host") as "dimension.identifier.host" [ mcatalog values(_dims) as info where metric_name=cpu.* AND (`sai_metrics_indexes`) earliest=-90s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "cpu" AND info != "extracted_host" AND info != "host"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=cpu.* AND (`sai_metrics_indexes`) earliest=-90s by "host"| fields dimension.*| eval entity_class="os", mod_time=now(), expiry_time=mod_time+90| eval identifier_dimensions="host"| makemv delim="$6e2f2abea68e4772926b3924da1117ba$" identifier_dimensions| eval key=sha256('dimension.identifier.host' + ":" + entity_class), title='dimension.identifier.host'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - perfmon]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:perfmon
alert_condition = search key=*
cron_schedule = */1 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("host") as "dimension.identifier.host" [ mcatalog values(_dims) as info where metric_name=Processor.* OR metric_name=processor.* AND (`sai_metrics_indexes`) earliest=-90s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "instance" AND info != "extracted_host" AND info != "cpu" AND info != "disk" AND info != "collection" AND info != "object" AND info != "host"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=Processor.* OR metric_name=processor.* AND (`sai_metrics_indexes`) earliest=-90s by "host"| fields dimension.*| eval entity_class="perfmon", mod_time=now(), expiry_time=mod_time+90| eval identifier_dimensions="host"| makemv delim="$f4506fb3882e4ba08839024937dfd208$" identifier_dimensions| eval key=sha256('dimension.identifier.host' + ":" + entity_class), title='dimension.identifier.host'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key

[Entity Class - telegraf]
action.em_write_entity_summary = 1
alert.managedBy = splunk_app_infrastructure:entity_class:telegraf
alert_condition = search key=*
cron_schedule = */1 * * * *
enableSched = 1
schedule_priority = highest
search = | mcatalog values("host") as "dimension.identifier.host" [ mcatalog values(_dims) as info where metric_name=telegraf.cpu.* AND (`sai_metrics_indexes`) earliest=-90s| append [ | makeresults | eval info="no-data-placeholder"| fields - _time]| mvexpand info| search info != "punct" AND info != "val" AND info != "metric_type" AND info != "cpu" AND info != "extracted_host" AND info != "host"| eval search="values(" . "\"" . info . "\"" . ") as " . "\"" . "dimension.info." . info . "\""| fields search| mvcombine search| nomv search] where metric_name=telegraf.cpu.* AND (`sai_metrics_indexes`) earliest=-90s by "host"| fields dimension.*| eval entity_class="telegraf", mod_time=now(), expiry_time=mod_time+90| eval identifier_dimensions="host"| makemv delim="$e9df971909224c5fabbaf095c45bee51$" identifier_dimensions| eval key=sha256('dimension.identifier.host' + ":" + entity_class), title='dimension.identifier.host'| foreach dimension.*[| eval "<<FIELD>>"=coalesce('<<FIELD>>', "null_value_placeholder")| mvexpand "<<FIELD>>"| eval "<<FIELD>>"=if('<<FIELD>>'="null_value_placeholder", null(), '<<FIELD>>')| eval is_identifier=if(match("<<MATCHSTR>>", "identifier"), 1, 0)| eval "<<MATCHSTR>>"=substr("<<MATCHSTR>>", len(if(is_identifier=1, "identifier.", "info.")) + 1) + "=" + '<<FIELD>>', dimensions_kv=mvappend(dimensions_kv, '<<MATCHSTR>>')] | fields key, title, dimensions_kv, entity_class, mod_time, expiry_time, identifier_dimensions| stats values(*) as * by key
